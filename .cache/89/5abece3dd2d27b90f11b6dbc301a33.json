{"id":"QR3Y","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hash\\package.json","includedInParent":true,"mtime":1598465886487},{"name":"inherits","loc":{"line":2,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hash\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\inherits\\inherits_browser.js"},{"name":"md5.js","loc":{"line":3,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hash\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\md5.js\\index.js"},{"name":"ripemd160","loc":{"line":4,"column":24},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hash\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\ripemd160\\index.js"},{"name":"sha.js","loc":{"line":5,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hash\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\sha.js\\index.js"},{"name":"cipher-base","loc":{"line":6,"column":19},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hash\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\cipher-base\\index.js"}],"generated":{"js":"var $QR3Y$exports = {};\nvar $QR3Y$var$inherits = $parcel$require(\"QR3Y\", \"inherits\");\nvar $QR3Y$var$MD5 = $parcel$require(\"QR3Y\", \"md5.js\");\nvar $QR3Y$var$RIPEMD160 = $parcel$require(\"QR3Y\", \"ripemd160\");\nvar $QR3Y$var$sha = $parcel$require(\"QR3Y\", \"sha.js\");\nvar $QR3Y$var$Base = $parcel$require(\"QR3Y\", \"cipher-base\");\n\nfunction $QR3Y$var$Hash(hash) {\n  $QR3Y$var$Base.call(this, 'digest');\n  this._hash = hash;\n}\n\n$QR3Y$var$inherits($QR3Y$var$Hash, $QR3Y$var$Base);\n\n$QR3Y$var$Hash.prototype._update = function (data) {\n  this._hash.update(data);\n};\n\n$QR3Y$var$Hash.prototype._final = function () {\n  return this._hash.digest();\n};\n\n$QR3Y$exports = function createHash(alg) {\n  alg = alg.toLowerCase();\n  if (alg === 'md5') return new $QR3Y$var$MD5();\n  if (alg === 'rmd160' || alg === 'ripemd160') return new $QR3Y$var$RIPEMD160();\n  return new $QR3Y$var$Hash($QR3Y$var$sha(alg));\n};"},"sourceMaps":null,"error":null,"hash":"7aa97358a7d545675d66911c81b3dda9","cacheData":{"env":{},"imports":{"$require$inherits":["inherits","*"],"$require$md5.js":["md5.js","*"],"$require$ripemd160":["ripemd160","*"],"$require$sha.js":["sha.js","*"],"$require$cipher-base":["cipher-base","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true,"shouldWrap":true}}