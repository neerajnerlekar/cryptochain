{"id":"vCVL","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\minimalistic-crypto-utils\\package.json","includedInParent":true,"mtime":1598465911065}],"generated":{"js":"var $vCVL$exports = {};\nvar $vCVL$var$utils = $vCVL$exports;\n\nfunction $vCVL$var$toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n\n    return res;\n  }\n\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0) msg = '0' + msg;\n\n    for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi) res.push(hi, lo);else res.push(lo);\n    }\n  }\n\n  return res;\n}\n\n$vCVL$var$utils.toArray = $vCVL$var$toArray;\n\nfunction $vCVL$var$zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\n$vCVL$var$utils.zero2 = $vCVL$var$zero2;\n\nfunction $vCVL$var$toHex(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) res += $vCVL$var$zero2(msg[i].toString(16));\n\n  return res;\n}\n\n$vCVL$var$utils.toHex = $vCVL$var$toHex;\n\n$vCVL$var$utils.encode = function encode(arr, enc) {\n  if (enc === 'hex') return $vCVL$var$toHex(arr);else return arr;\n};"},"sourceMaps":null,"error":null,"hash":"02f29ddf64eba161ccbe1b619b040e0f","cacheData":{"env":{},"imports":{},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}