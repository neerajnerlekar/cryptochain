{"id":"V4U6","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\randombytes\\package.json","includedInParent":true,"mtime":1598465898137},{"name":"safe-buffer","loc":{"line":15,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\randombytes\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safe-buffer\\index.js"},{"name":"process","parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\randombytes\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\process\\browser.js"}],"generated":{"js":"\nvar $V4U6$exports = {};\nvar $V4U6$var$process = $parcel$require(\"V4U6\", \"process\");\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar $V4U6$var$MAX_BYTES = 65536; // Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\n\nvar $V4U6$var$MAX_UINT32 = 4294967295;\n\nfunction $V4U6$var$oldBrowser() {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11');\n}\n\nvar $V4U6$var$Buffer = $parcel$require(\"V4U6\", \"safe-buffer\").Buffer;\nvar $V4U6$var$crypto = $parcel$global.crypto || $parcel$global.msCrypto;\n\nif ($V4U6$var$crypto && $V4U6$var$crypto.getRandomValues) {\n  $V4U6$exports = $V4U6$var$randomBytes;\n} else {\n  $V4U6$exports = $V4U6$var$oldBrowser;\n}\n\nfunction $V4U6$var$randomBytes(size, cb) {\n  // phantomjs needs to throw\n  if (size > $V4U6$var$MAX_UINT32) throw new RangeError('requested too many random bytes');\n  var bytes = $V4U6$var$Buffer.allocUnsafe(size);\n\n  if (size > 0) {\n    // getRandomValues fails on IE if size == 0\n    if (size > $V4U6$var$MAX_BYTES) {\n      // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += $V4U6$var$MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        $V4U6$var$crypto.getRandomValues(bytes.slice(generated, generated + $V4U6$var$MAX_BYTES));\n      }\n    } else {\n      $V4U6$var$crypto.getRandomValues(bytes);\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return $V4U6$var$process.nextTick(function () {\n      cb(null, bytes);\n    });\n  }\n\n  return bytes;\n}"},"sourceMaps":null,"error":null,"hash":"1afa70c4167a1372c35c0b5b20f52f47","cacheData":{"env":{},"imports":{"$require$safe-buffer":["safe-buffer","*"],"$require$process":["process","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}