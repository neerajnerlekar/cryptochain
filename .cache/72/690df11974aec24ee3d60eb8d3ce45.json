{"id":"kbGg","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\stream-browserify\\package.json","includedInParent":true,"mtime":1598465886302},{"name":"events","loc":{"line":24,"column":17},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\stream-browserify\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\events\\events.js"},{"name":"inherits","loc":{"line":25,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\stream-browserify\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\inherits\\inherits_browser.js"},{"name":"readable-stream/readable.js","loc":{"line":28,"column":26},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\stream-browserify\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\readable-stream\\readable-browser.js"},{"name":"readable-stream/writable.js","loc":{"line":29,"column":26},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\stream-browserify\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\readable-stream\\writable-browser.js"},{"name":"readable-stream/duplex.js","loc":{"line":30,"column":24},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\stream-browserify\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\readable-stream\\duplex-browser.js"},{"name":"readable-stream/transform.js","loc":{"line":31,"column":27},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\stream-browserify\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\readable-stream\\transform.js"},{"name":"readable-stream/passthrough.js","loc":{"line":32,"column":29},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\stream-browserify\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\readable-stream\\passthrough.js"}],"generated":{"js":"var $kbGg$exports = {};\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n$kbGg$exports = $kbGg$var$Stream;\nvar $kbGg$var$EE = $parcel$require(\"kbGg\", \"events\").EventEmitter;\nvar $kbGg$var$inherits = $parcel$require(\"kbGg\", \"inherits\");\n$kbGg$var$inherits($kbGg$var$Stream, $kbGg$var$EE);\n$kbGg$var$Stream.Readable = $parcel$require(\"kbGg\", \"readable-stream/readable.js\");\n$kbGg$var$Stream.Writable = $parcel$require(\"kbGg\", \"readable-stream/writable.js\");\n$kbGg$var$Stream.Duplex = $parcel$require(\"kbGg\", \"readable-stream/duplex.js\");\n$kbGg$var$Stream.Transform = $parcel$require(\"kbGg\", \"readable-stream/transform.js\");\n$kbGg$var$Stream.PassThrough = $parcel$require(\"kbGg\", \"readable-stream/passthrough.js\"); // Backwards-compat with node 0.4.x\n\n$kbGg$var$Stream.Stream = $kbGg$var$Stream; // old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction $kbGg$var$Stream() {\n  $kbGg$var$EE.call(this);\n}\n\n$kbGg$var$Stream.prototype.pipe = function (dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain); // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n    dest.end();\n  }\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n    if (typeof dest.destroy === 'function') dest.destroy();\n  } // don't leave dangling pipes when there are errors.\n\n\n  function onerror(er) {\n    cleanup();\n\n    if ($kbGg$var$EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror); // remove all the event listeners that were added.\n\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n  dest.on('close', cleanup);\n  dest.emit('pipe', source); // Allow for unix-like usage: A.pipe(B).pipe(C)\n\n  return dest;\n};"},"sourceMaps":null,"error":null,"hash":"5073dd62769fed0a425bc2e8da10415b","cacheData":{"env":{},"imports":{"$require$events":["events","*"],"$require$inherits":["inherits","*"],"$require$readable-stream/readable.js":["readable-stream/readable.js","*"],"$require$readable-stream/writable.js":["readable-stream/writable.js","*"],"$require$readable-stream/duplex.js":["readable-stream/duplex.js","*"],"$require$readable-stream/transform.js":["readable-stream/transform.js","*"],"$require$readable-stream/passthrough.js":["readable-stream/passthrough.js","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}