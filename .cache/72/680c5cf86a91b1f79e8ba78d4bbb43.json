{"id":"Uozs","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\package.json","includedInParent":true,"mtime":1598465886486},{"name":"safe-buffer","loc":{"line":1,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\browser\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\node_modules\\safe-buffer\\index.js"},{"name":"create-hash","loc":{"line":2,"column":25},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\browser\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hash\\browser.js"},{"name":"readable-stream","loc":{"line":3,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\browser\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\node_modules\\readable-stream\\readable-browser.js"},{"name":"inherits","loc":{"line":4,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\browser\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\inherits\\inherits_browser.js"},{"name":"./sign","loc":{"line":5,"column":19},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\browser\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\browser\\sign.js"},{"name":"./verify","loc":{"line":6,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\browser\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\browser\\verify.js"},{"name":"./algorithms.json","loc":{"line":8,"column":25},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\browser\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\browser\\algorithms.json"}],"generated":{"js":"\nvar $Uozs$exports = {};\nvar $Uozs$var$Buffer = $parcel$require(\"Uozs\", \"safe-buffer\").Buffer;\nvar $Uozs$var$createHash = $parcel$require(\"Uozs\", \"create-hash\");\nvar $Uozs$var$stream = $parcel$require(\"Uozs\", \"readable-stream\");\nvar $Uozs$var$inherits = $parcel$require(\"Uozs\", \"inherits\");\nvar $Uozs$var$sign = $parcel$require(\"Uozs\", \"./sign\");\nvar $Uozs$var$verify = $parcel$require(\"Uozs\", \"./verify\");\nvar $Uozs$var$algorithms = $parcel$require(\"Uozs\", \"./algorithms.json\");\nObject.keys($Uozs$var$algorithms).forEach(function (key) {\n  $Uozs$var$algorithms[key].id = $Uozs$var$Buffer.from($Uozs$var$algorithms[key].id, 'hex');\n  $Uozs$var$algorithms[key.toLowerCase()] = $Uozs$var$algorithms[key];\n});\n\nfunction $Uozs$var$Sign(algorithm) {\n  $Uozs$var$stream.Writable.call(this);\n  var data = $Uozs$var$algorithms[algorithm];\n  if (!data) throw new Error('Unknown message digest');\n  this._hashType = data.hash;\n  this._hash = $Uozs$var$createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\n\n$Uozs$var$inherits($Uozs$var$Sign, $Uozs$var$stream.Writable);\n\n$Uozs$var$Sign.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n\n  done();\n};\n\n$Uozs$var$Sign.prototype.update = function update(data, enc) {\n  if (typeof data === 'string') data = $Uozs$var$Buffer.from(data, enc);\n\n  this._hash.update(data);\n\n  return this;\n};\n\n$Uozs$var$Sign.prototype.sign = function signMethod(key, enc) {\n  this.end();\n\n  var hash = this._hash.digest();\n\n  var sig = $Uozs$var$sign(hash, key, this._hashType, this._signType, this._tag);\n  return enc ? sig.toString(enc) : sig;\n};\n\nfunction $Uozs$var$Verify(algorithm) {\n  $Uozs$var$stream.Writable.call(this);\n  var data = $Uozs$var$algorithms[algorithm];\n  if (!data) throw new Error('Unknown message digest');\n  this._hash = $Uozs$var$createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\n\n$Uozs$var$inherits($Uozs$var$Verify, $Uozs$var$stream.Writable);\n\n$Uozs$var$Verify.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n\n  done();\n};\n\n$Uozs$var$Verify.prototype.update = function update(data, enc) {\n  if (typeof data === 'string') data = $Uozs$var$Buffer.from(data, enc);\n\n  this._hash.update(data);\n\n  return this;\n};\n\n$Uozs$var$Verify.prototype.verify = function verifyMethod(key, sig, enc) {\n  if (typeof sig === 'string') sig = $Uozs$var$Buffer.from(sig, enc);\n  this.end();\n\n  var hash = this._hash.digest();\n\n  return $Uozs$var$verify(sig, hash, key, this._signType, this._tag);\n};\n\nfunction $Uozs$var$createSign(algorithm) {\n  return new $Uozs$var$Sign(algorithm);\n}\n\nfunction $Uozs$var$createVerify(algorithm) {\n  return new $Uozs$var$Verify(algorithm);\n}\n\n$Uozs$exports = {\n  Sign: $Uozs$var$createSign,\n  Verify: $Uozs$var$createVerify,\n  createSign: $Uozs$var$createSign,\n  createVerify: $Uozs$var$createVerify\n};"},"sourceMaps":null,"error":null,"hash":"56bab14f3ae75a04807e9575ac72e02d","cacheData":{"env":{},"imports":{"$require$safe-buffer":["safe-buffer","*"],"$require$create-hash":["create-hash","*"],"$require$readable-stream":["readable-stream","*"],"$require$inherits":["inherits","*"],"$require$./sign":["./sign","*"],"$require$./verify":["./verify","*"],"$require$./algorithms.json":["./algorithms.json","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}