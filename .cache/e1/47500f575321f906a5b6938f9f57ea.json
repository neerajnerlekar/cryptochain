{"id":"rkp4","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\asn1.js\\package.json","includedInParent":true,"mtime":1598465897439},{"name":"inherits","loc":{"line":3,"column":25},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\asn1.js\\lib\\asn1\\decoders\\pem.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\inherits\\inherits_browser.js"},{"name":"safer-buffer","loc":{"line":4,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\asn1.js\\lib\\asn1\\decoders\\pem.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safer-buffer\\safer.js"},{"name":"./der","loc":{"line":6,"column":27},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\asn1.js\\lib\\asn1\\decoders\\pem.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\asn1.js\\lib\\asn1\\decoders\\der.js"}],"generated":{"js":"\nvar $rkp4$exports = {};\nconst $rkp4$var$inherits = $parcel$require(\"rkp4\", \"inherits\");\nconst $rkp4$var$Buffer = $parcel$require(\"rkp4\", \"safer-buffer\").Buffer;\nconst $rkp4$var$DERDecoder = $parcel$require(\"rkp4\", \"./der\");\n\nfunction $rkp4$var$PEMDecoder(entity) {\n  $rkp4$var$DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\n\n$rkp4$var$inherits($rkp4$var$PEMDecoder, $rkp4$var$DERDecoder);\n$rkp4$exports = $rkp4$var$PEMDecoder;\n\n$rkp4$var$PEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n  const label = options.label.toUpperCase();\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null) continue;\n    if (match[2] !== label) continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN') break;\n      start = i;\n    } else {\n      if (match[1] !== 'END') break;\n      end = i;\n      break;\n    }\n  }\n\n  if (start === -1 || end === -1) throw new Error('PEM section not found for: ' + label);\n  const base64 = lines.slice(start + 1, end).join(''); // Remove excessive symbols\n\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n  const input = $rkp4$var$Buffer.from(base64, 'base64');\n  return $rkp4$var$DERDecoder.prototype.decode.call(this, input, options);\n};"},"sourceMaps":null,"error":null,"hash":"48138c43849a52f6e5c2b40feaa19141","cacheData":{"env":{},"imports":{"$require$inherits":["inherits","*"],"$require$safer-buffer":["safer-buffer","*"],"$require$./der":["./der","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}