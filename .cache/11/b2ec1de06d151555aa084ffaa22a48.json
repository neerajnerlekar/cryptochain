{"id":"LZdq","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hmac\\package.json","includedInParent":true,"mtime":1598465886487},{"name":"inherits","loc":{"line":2,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hmac\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\inherits\\inherits_browser.js"},{"name":"./legacy","loc":{"line":3,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hmac\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hmac\\legacy.js"},{"name":"cipher-base","loc":{"line":4,"column":19},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hmac\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\cipher-base\\index.js"},{"name":"safe-buffer","loc":{"line":5,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hmac\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safe-buffer\\index.js"},{"name":"create-hash/md5","loc":{"line":6,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hmac\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hash\\md5.js"},{"name":"ripemd160","loc":{"line":7,"column":24},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hmac\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\ripemd160\\index.js"},{"name":"sha.js","loc":{"line":9,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hmac\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\sha.js\\index.js"}],"generated":{"js":"\nvar $LZdq$exports = {};\nvar $LZdq$var$inherits = $parcel$require(\"LZdq\", \"inherits\");\nvar $LZdq$var$Legacy = $parcel$require(\"LZdq\", \"./legacy\");\nvar $LZdq$var$Base = $parcel$require(\"LZdq\", \"cipher-base\");\nvar $LZdq$var$Buffer = $parcel$require(\"LZdq\", \"safe-buffer\").Buffer;\nvar $LZdq$var$md5 = $parcel$require(\"LZdq\", \"create-hash/md5\");\nvar $LZdq$var$RIPEMD160 = $parcel$require(\"LZdq\", \"ripemd160\");\nvar $LZdq$var$sha = $parcel$require(\"LZdq\", \"sha.js\");\nvar $LZdq$var$ZEROS = $LZdq$var$Buffer.alloc(128);\n\nfunction $LZdq$var$Hmac(alg, key) {\n  $LZdq$var$Base.call(this, 'digest');\n\n  if (typeof key === 'string') {\n    key = $LZdq$var$Buffer.from(key);\n  }\n\n  var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;\n  this._alg = alg;\n  this._key = key;\n\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new $LZdq$var$RIPEMD160() : $LZdq$var$sha(alg);\n    key = hash.update(key).digest();\n  } else if (key.length < blocksize) {\n    key = $LZdq$var$Buffer.concat([key, $LZdq$var$ZEROS], blocksize);\n  }\n\n  var ipad = this._ipad = $LZdq$var$Buffer.allocUnsafe(blocksize);\n  var opad = this._opad = $LZdq$var$Buffer.allocUnsafe(blocksize);\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36;\n    opad[i] = key[i] ^ 0x5C;\n  }\n\n  this._hash = alg === 'rmd160' ? new $LZdq$var$RIPEMD160() : $LZdq$var$sha(alg);\n\n  this._hash.update(ipad);\n}\n\n$LZdq$var$inherits($LZdq$var$Hmac, $LZdq$var$Base);\n\n$LZdq$var$Hmac.prototype._update = function (data) {\n  this._hash.update(data);\n};\n\n$LZdq$var$Hmac.prototype._final = function () {\n  var h = this._hash.digest();\n\n  var hash = this._alg === 'rmd160' ? new $LZdq$var$RIPEMD160() : $LZdq$var$sha(this._alg);\n  return hash.update(this._opad).update(h).digest();\n};\n\n$LZdq$exports = function createHmac(alg, key) {\n  alg = alg.toLowerCase();\n\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new $LZdq$var$Hmac('rmd160', key);\n  }\n\n  if (alg === 'md5') {\n    return new $LZdq$var$Legacy($LZdq$var$md5, key);\n  }\n\n  return new $LZdq$var$Hmac(alg, key);\n};"},"sourceMaps":null,"error":null,"hash":"a561744d18dbfd86a7c67e3b4038c974","cacheData":{"env":{},"imports":{"$require$inherits":["inherits","*"],"$require$./legacy":["./legacy","*"],"$require$cipher-base":["cipher-base","*"],"$require$safe-buffer":["safe-buffer","*"],"$require$create-hash/md5":["create-hash/md5","*"],"$require$ripemd160":["ripemd160","*"],"$require$sha.js":["sha.js","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}