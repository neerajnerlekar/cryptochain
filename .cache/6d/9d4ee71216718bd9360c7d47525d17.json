{"id":"lafQ","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\package.json","includedInParent":true,"mtime":1598465880614},{"name":"setprototypeof","loc":{"line":16,"column":29},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\middleware\\init.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\setprototypeof\\index.js"}],"generated":{"js":"var $lafQ$exports = {};\n\n/**\n * Module dependencies.\n * @private\n */\nvar $lafQ$var$setPrototypeOf = $parcel$require(\"lafQ\", \"setprototypeof\");\n/**\n * Initialization middleware, exposing the\n * request and response to each other, as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nvar $lafQ$export$init = function (app) {\n  return function expressInit(req, res, next) {\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n    $lafQ$var$setPrototypeOf(req, app.request);\n    $lafQ$var$setPrototypeOf(res, app.response);\n    res.locals = res.locals || Object.create(null);\n    next();\n  };\n};\n\n$lafQ$exports.init = $lafQ$export$init;"},"sourceMaps":null,"error":null,"hash":"33d5a91467110b7156f8c9c992500748","cacheData":{"env":{},"imports":{"$require$setprototypeof":["setprototypeof","*"]},"exports":{"init":"$lafQ$export$init"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}