{"id":"vtow","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\node_modules\\readable-stream\\package.json","includedInParent":true,"mtime":1598465887072},{"name":"./_stream_readable","loc":{"line":42,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\node_modules\\readable-stream\\lib\\_stream_duplex.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\node_modules\\readable-stream\\lib\\_stream_readable.js"},{"name":"./_stream_writable","loc":{"line":44,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\node_modules\\readable-stream\\lib\\_stream_duplex.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\node_modules\\readable-stream\\lib\\_stream_writable.js"},{"name":"inherits","loc":{"line":46,"column":8},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\node_modules\\readable-stream\\lib\\_stream_duplex.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\inherits\\inherits_browser.js"},{"name":"process","parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-sign\\node_modules\\readable-stream\\lib\\_stream_duplex.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\process\\browser.js"}],"generated":{"js":"var $vtow$exports = {};\nvar $vtow$var$process = $parcel$require(\"vtow\", \"process\");\n\n/*<replacement>*/\nvar $vtow$var$objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\n$vtow$exports = $vtow$var$Duplex;\nvar $vtow$var$Readable = $parcel$require(\"vtow\", \"./_stream_readable\");\nvar $vtow$var$Writable = $parcel$require(\"vtow\", \"./_stream_writable\");\n$parcel$require(\"vtow\", \"inherits\")($vtow$var$Duplex, $vtow$var$Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var $vtow$var$keys = $vtow$var$objectKeys($vtow$var$Writable.prototype);\n\n  for (var $vtow$var$v = 0; $vtow$var$v < $vtow$var$keys.length; $vtow$var$v++) {\n    var $vtow$var$method = $vtow$var$keys[$vtow$var$v];\n    if (!$vtow$var$Duplex.prototype[$vtow$var$method]) $vtow$var$Duplex.prototype[$vtow$var$method] = $vtow$var$Writable.prototype[$vtow$var$method];\n  }\n}\n\nfunction $vtow$var$Duplex(options) {\n  if (!(this instanceof $vtow$var$Duplex)) return new $vtow$var$Duplex(options);\n  $vtow$var$Readable.call(this, options);\n  $vtow$var$Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', $vtow$var$onend);\n    }\n  }\n}\n\nObject.defineProperty($vtow$var$Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty($vtow$var$Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty($vtow$var$Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction $vtow$var$onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  $vtow$var$process.nextTick($vtow$var$onEndNT, this);\n}\n\nfunction $vtow$var$onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty($vtow$var$Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});"},"sourceMaps":null,"error":null,"hash":"a73ad11b26f6f701df265132d3d7acc3","cacheData":{"env":{},"imports":{"$require$./_stream_readable":["./_stream_readable","*"],"$require$./_stream_writable":["./_stream_writable","*"],"$require$inherits":["inherits","*"],"$require$process":["process","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}