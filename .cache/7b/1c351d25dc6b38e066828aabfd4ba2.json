{"id":"EOeg","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\package.json","includedInParent":true,"mtime":1598465880614},{"name":"safe-buffer","loc":{"line":15,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\utils.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\node_modules\\safe-buffer\\index.js"},{"name":"content-disposition","loc":{"line":16,"column":33},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\utils.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\content-disposition\\index.js"},{"name":"content-type","loc":{"line":17,"column":26},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\utils.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\content-type\\index.js"},{"name":"depd","loc":{"line":18,"column":24},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\utils.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\depd\\lib\\browser\\index.js"},{"name":"array-flatten","loc":{"line":19,"column":22},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\utils.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\array-flatten\\array-flatten.js"},{"name":"send","loc":{"line":20,"column":19},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\utils.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\send\\index.js"},{"name":"etag","loc":{"line":21,"column":19},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\utils.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\etag\\index.js"},{"name":"proxy-addr","loc":{"line":22,"column":24},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\utils.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\proxy-addr\\index.js"},{"name":"qs","loc":{"line":23,"column":17},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\utils.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\node_modules\\qs\\lib\\index.js"},{"name":"querystring","loc":{"line":24,"column":26},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\lib\\utils.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\querystring-es3\\index.js"}],"generated":{"js":"\nvar $EOeg$exports = {};\n\n/**\n * Module dependencies.\n * @api private\n */\nvar $EOeg$var$Buffer = $parcel$require(\"EOeg\", \"safe-buffer\").Buffer;\nvar $EOeg$var$contentDisposition = $parcel$require(\"EOeg\", \"content-disposition\");\nvar $EOeg$var$contentType = $parcel$require(\"EOeg\", \"content-type\");\nvar $EOeg$var$deprecate = $parcel$require(\"EOeg\", \"depd\")('express');\nvar $EOeg$var$flatten = $parcel$require(\"EOeg\", \"array-flatten\");\nvar $EOeg$var$mime = $parcel$require(\"EOeg\", \"send\").mime;\nvar $EOeg$var$etag = $parcel$require(\"EOeg\", \"etag\");\nvar $EOeg$var$proxyaddr = $parcel$require(\"EOeg\", \"proxy-addr\");\nvar $EOeg$var$qs = $parcel$require(\"EOeg\", \"qs\");\nvar $EOeg$var$querystring = $parcel$require(\"EOeg\", \"querystring\");\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nvar $EOeg$export$etag = $EOeg$var$createETagGenerator({\n  weak: false\n});\n$EOeg$exports.etag = $EOeg$export$etag;\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nvar $EOeg$export$wetag = $EOeg$var$createETagGenerator({\n  weak: true\n});\n$EOeg$exports.wetag = $EOeg$export$wetag;\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nvar $EOeg$export$isAbsolute = function (path) {\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n$EOeg$exports.isAbsolute = $EOeg$export$isAbsolute;\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nvar $EOeg$export$flatten = $EOeg$var$deprecate.function($EOeg$var$flatten, 'utils.flatten: use array-flatten npm module instead');\n$EOeg$exports.flatten = $EOeg$export$flatten;\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nvar $EOeg$export$normalizeType = function (type) {\n  return ~type.indexOf('/') ? $EOeg$var$acceptParams(type) : {\n    value: $EOeg$var$mime.lookup(type),\n    params: {}\n  };\n};\n\n$EOeg$exports.normalizeType = $EOeg$export$normalizeType;\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nvar $EOeg$export$normalizeTypes = function (types) {\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push($EOeg$exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n$EOeg$exports.normalizeTypes = $EOeg$export$normalizeTypes;\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nvar $EOeg$export$contentDisposition = $EOeg$var$deprecate.function($EOeg$var$contentDisposition, 'utils.contentDisposition: use content-disposition npm module instead');\n$EOeg$exports.contentDisposition = $EOeg$export$contentDisposition;\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction $EOeg$var$acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = {\n    value: parts[0],\n    quality: 1,\n    params: {},\n    originalIndex: index\n  };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\n\nvar $EOeg$export$compileETag = function (val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = $EOeg$exports.wetag;\n      break;\n\n    case false:\n      break;\n\n    case 'strong':\n      fn = $EOeg$exports.etag;\n      break;\n\n    case 'weak':\n      fn = $EOeg$exports.wetag;\n      break;\n\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n};\n\n$EOeg$exports.compileETag = $EOeg$export$compileETag;\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nvar $EOeg$export$compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = $EOeg$var$querystring.parse;\n      break;\n\n    case false:\n      fn = $EOeg$var$newObject;\n      break;\n\n    case 'extended':\n      fn = $EOeg$var$parseExtendedQueryString;\n      break;\n\n    case 'simple':\n      fn = $EOeg$var$querystring.parse;\n      break;\n\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n};\n\n$EOeg$exports.compileQueryParser = $EOeg$export$compileQueryParser;\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nvar $EOeg$export$compileTrust = function (val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function () {\n      return true;\n    };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function (a, i) {\n      return i < val;\n    };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(/ *, */);\n  }\n\n  return $EOeg$var$proxyaddr.compile(val || []);\n};\n\n$EOeg$exports.compileTrust = $EOeg$export$compileTrust;\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nvar $EOeg$export$setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  } // parse type\n\n\n  var parsed = $EOeg$var$contentType.parse(type); // set charset\n\n  parsed.parameters.charset = charset; // format type\n\n  return $EOeg$var$contentType.format(parsed);\n};\n\n$EOeg$exports.setCharset = $EOeg$export$setCharset;\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction $EOeg$var$createETagGenerator(options) {\n  return function generateETag(body, encoding) {\n    var buf = !$EOeg$var$Buffer.isBuffer(body) ? $EOeg$var$Buffer.from(body, encoding) : body;\n    return $EOeg$var$etag(buf, options);\n  };\n}\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\n\nfunction $EOeg$var$parseExtendedQueryString(str) {\n  return $EOeg$var$qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\n\nfunction $EOeg$var$newObject() {\n  return {};\n}"},"sourceMaps":null,"error":null,"hash":"1f709aa670e18fd69bb0e622596e3bca","cacheData":{"env":{},"imports":{"$require$safe-buffer":["safe-buffer","*"],"$require$content-disposition":["content-disposition","*"],"$require$content-type":["content-type","*"],"$require$depd":["depd","*"],"$require$array-flatten":["array-flatten","*"],"$require$send":["send","*"],"$require$etag":["etag","*"],"$require$proxy-addr":["proxy-addr","*"],"$require$qs":["qs","*"],"$require$querystring":["querystring","*"]},"exports":{"etag":"$EOeg$export$etag","wetag":"$EOeg$export$wetag","isAbsolute":"$EOeg$export$isAbsolute","flatten":"$EOeg$export$flatten","normalizeType":"$EOeg$export$normalizeType","normalizeTypes":"$EOeg$export$normalizeTypes","contentDisposition":"$EOeg$export$contentDisposition","compileETag":"$EOeg$export$compileETag","compileQueryParser":"$EOeg$export$compileQueryParser","compileTrust":"$EOeg$export$compileTrust","setCharset":"$EOeg$export$setCharset"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}