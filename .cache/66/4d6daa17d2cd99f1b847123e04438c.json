{"id":"hkW4","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\node_modules\\raw-body\\node_modules\\http-errors\\package.json","includedInParent":true,"mtime":1598465895269},{"name":"depd","loc":{"line":15,"column":24},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\node_modules\\raw-body\\node_modules\\http-errors\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\node_modules\\raw-body\\node_modules\\depd\\lib\\browser\\index.js"},{"name":"setprototypeof","loc":{"line":16,"column":29},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\node_modules\\raw-body\\node_modules\\http-errors\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\node_modules\\raw-body\\node_modules\\setprototypeof\\index.js"},{"name":"statuses","loc":{"line":17,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\node_modules\\raw-body\\node_modules\\http-errors\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\statuses\\index.js"},{"name":"inherits","loc":{"line":18,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\node_modules\\raw-body\\node_modules\\http-errors\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\express\\node_modules\\inherits\\inherits_browser.js"}],"generated":{"js":"var $hkW4$exports = {};\n\n/**\n * Module dependencies.\n * @private\n */\nvar $hkW4$var$deprecate = $parcel$require(\"hkW4\", \"depd\")('http-errors');\nvar $hkW4$var$setPrototypeOf = $parcel$require(\"hkW4\", \"setprototypeof\");\nvar $hkW4$var$statuses = $parcel$require(\"hkW4\", \"statuses\");\nvar $hkW4$var$inherits = $parcel$require(\"hkW4\", \"inherits\");\n/**\n * Module exports.\n * @public\n */\n\n$hkW4$exports = $hkW4$var$createError;\n$hkW4$exports.HttpError = $hkW4$var$createHttpErrorConstructor(); // Populate exports for all constructors\n\n$hkW4$var$populateConstructorExports($hkW4$exports, $hkW4$var$statuses.codes, $hkW4$exports.HttpError);\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction $hkW4$var$codeClass(status) {\n  return Number(String(status).charAt(0) + '00');\n}\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\n\nfunction $hkW4$var$createError() {\n  // so much arity going on ~_~\n  var err;\n  var msg;\n  var status = 500;\n  var props = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error) {\n      err = arg;\n      status = err.status || err.statusCode || status;\n      continue;\n    }\n\n    switch (typeof arg) {\n      case 'string':\n        msg = arg;\n        break;\n\n      case 'number':\n        status = arg;\n\n        if (i !== 0) {\n          $hkW4$var$deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)');\n        }\n\n        break;\n\n      case 'object':\n        props = arg;\n        break;\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    $hkW4$var$deprecate('non-error status code; use only 4xx or 5xx status codes');\n  }\n\n  if (typeof status !== 'number' || !$hkW4$var$statuses[status] && (status < 400 || status >= 600)) {\n    status = 500;\n  } // constructor\n\n\n  var HttpError = $hkW4$var$createError[status] || $hkW4$var$createError[$hkW4$var$codeClass(status)];\n\n  if (!err) {\n    // create error\n    err = HttpError ? new HttpError(msg) : new Error(msg || $hkW4$var$statuses[status]);\n    Error.captureStackTrace(err, $hkW4$var$createError);\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500;\n    err.status = err.statusCode = status;\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key];\n    }\n  }\n\n  return err;\n}\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\n\nfunction $hkW4$var$createHttpErrorConstructor() {\n  function HttpError() {\n    throw new TypeError('cannot construct abstract class');\n  }\n\n  $hkW4$var$inherits(HttpError, Error);\n  return HttpError;\n}\n/**\n * Create a constructor for a client error.\n * @private\n */\n\n\nfunction $hkW4$var$createClientErrorConstructor(HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error';\n\n  function ClientError(message) {\n    // create the error object\n    var msg = message != null ? message : $hkW4$var$statuses[code];\n    var err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, ClientError); // adjust the [[Prototype]]\n\n    $hkW4$var$setPrototypeOf(err, ClientError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  $hkW4$var$inherits(ClientError, HttpError);\n  ClientError.prototype.status = code;\n  ClientError.prototype.statusCode = code;\n  ClientError.prototype.expose = true;\n  return ClientError;\n}\n/**\n * Create a constructor for a server error.\n * @private\n */\n\n\nfunction $hkW4$var$createServerErrorConstructor(HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error';\n\n  function ServerError(message) {\n    // create the error object\n    var msg = message != null ? message : $hkW4$var$statuses[code];\n    var err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, ServerError); // adjust the [[Prototype]]\n\n    $hkW4$var$setPrototypeOf(err, ServerError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  $hkW4$var$inherits(ServerError, HttpError);\n  ServerError.prototype.status = code;\n  ServerError.prototype.statusCode = code;\n  ServerError.prototype.expose = false;\n  return ServerError;\n}\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\n\nfunction $hkW4$var$populateConstructorExports(exports, codes, HttpError) {\n  codes.forEach(function forEachCode(code) {\n    var CodeError;\n    var name = $hkW4$var$toIdentifier($hkW4$var$statuses[code]);\n\n    switch ($hkW4$var$codeClass(code)) {\n      case 400:\n        CodeError = $hkW4$var$createClientErrorConstructor(HttpError, name, code);\n        break;\n\n      case 500:\n        CodeError = $hkW4$var$createServerErrorConstructor(HttpError, name, code);\n        break;\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError;\n      exports[name] = CodeError;\n    }\n  }); // backwards-compatibility\n\n  exports[\"I'mateapot\"] = $hkW4$var$deprecate.function(exports.ImATeapot, '\"I\\'mateapot\"; use \"ImATeapot\" instead');\n}\n/**\n * Convert a string of words to a JavaScript identifier.\n * @private\n */\n\n\nfunction $hkW4$var$toIdentifier(str) {\n  return str.split(' ').map(function (token) {\n    return token.slice(0, 1).toUpperCase() + token.slice(1);\n  }).join('').replace(/[^ _0-9a-z]/gi, '');\n}"},"sourceMaps":null,"error":null,"hash":"c63e04f2d69934a1c4263a46fd6340ee","cacheData":{"env":{},"imports":{"$require$depd":["depd","*"],"$require$setprototypeof":["setprototypeof","*"],"$require$statuses":["statuses","*"],"$require$inherits":["inherits","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}