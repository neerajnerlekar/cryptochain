{"id":"Q77g","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\package.json","includedInParent":true,"mtime":1598465886486},{"name":"safe-buffer","loc":{"line":1,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\lib\\async.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safe-buffer\\index.js"},{"name":"./precondition","loc":{"line":3,"column":30},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\lib\\async.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\lib\\precondition.js"},{"name":"./default-encoding","loc":{"line":4,"column":30},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\lib\\async.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\lib\\default-encoding.js"},{"name":"./sync","loc":{"line":5,"column":19},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\lib\\async.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\lib\\sync-browser.js"},{"name":"./to-buffer","loc":{"line":6,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\lib\\async.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\lib\\to-buffer.js"},{"name":"process","parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\pbkdf2\\lib\\async.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\process\\browser.js"}],"generated":{"js":"\nvar $Q77g$exports = {};\nvar $Q77g$var$process = $parcel$require(\"Q77g\", \"process\");\nvar $Q77g$var$Buffer = $parcel$require(\"Q77g\", \"safe-buffer\").Buffer;\nvar $Q77g$var$checkParameters = $parcel$require(\"Q77g\", \"./precondition\");\nvar $Q77g$var$defaultEncoding = $parcel$require(\"Q77g\", \"./default-encoding\");\nvar $Q77g$var$sync = $parcel$require(\"Q77g\", \"./sync\");\nvar $Q77g$var$toBuffer = $parcel$require(\"Q77g\", \"./to-buffer\");\nvar $Q77g$var$ZERO_BUF;\nvar $Q77g$var$subtle = $parcel$global.crypto && $parcel$global.crypto.subtle;\nvar $Q77g$var$toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n};\nvar $Q77g$var$checks = [];\n\nfunction $Q77g$var$checkNative(algo) {\n  if ($parcel$global.process && !$parcel$global.process.browser) {\n    return Promise.resolve(false);\n  }\n\n  if (!$Q77g$var$subtle || !$Q77g$var$subtle.importKey || !$Q77g$var$subtle.deriveBits) {\n    return Promise.resolve(false);\n  }\n\n  if ($Q77g$var$checks[algo] !== undefined) {\n    return $Q77g$var$checks[algo];\n  }\n\n  $Q77g$var$ZERO_BUF = $Q77g$var$ZERO_BUF || $Q77g$var$Buffer.alloc(8);\n  var prom = $Q77g$var$browserPbkdf2($Q77g$var$ZERO_BUF, $Q77g$var$ZERO_BUF, 10, 128, algo).then(function () {\n    return true;\n  }).catch(function () {\n    return false;\n  });\n  $Q77g$var$checks[algo] = prom;\n  return prom;\n}\n\nfunction $Q77g$var$browserPbkdf2(password, salt, iterations, length, algo) {\n  return $Q77g$var$subtle.importKey('raw', password, {\n    name: 'PBKDF2'\n  }, false, ['deriveBits']).then(function (key) {\n    return $Q77g$var$subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3);\n  }).then(function (res) {\n    return $Q77g$var$Buffer.from(res);\n  });\n}\n\nfunction $Q77g$var$resolvePromise(promise, callback) {\n  promise.then(function (out) {\n    $Q77g$var$process.nextTick(function () {\n      callback(null, out);\n    });\n  }, function (e) {\n    $Q77g$var$process.nextTick(function () {\n      callback(e);\n    });\n  });\n}\n\n$Q77g$exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest;\n    digest = undefined;\n  }\n\n  digest = digest || 'sha1';\n  var algo = $Q77g$var$toBrowser[digest.toLowerCase()];\n\n  if (!algo || typeof $parcel$global.Promise !== 'function') {\n    return $Q77g$var$process.nextTick(function () {\n      var out;\n\n      try {\n        out = $Q77g$var$sync(password, salt, iterations, keylen, digest);\n      } catch (e) {\n        return callback(e);\n      }\n\n      callback(null, out);\n    });\n  }\n\n  $Q77g$var$checkParameters(iterations, keylen);\n  password = $Q77g$var$toBuffer(password, $Q77g$var$defaultEncoding, 'Password');\n  salt = $Q77g$var$toBuffer(salt, $Q77g$var$defaultEncoding, 'Salt');\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2');\n  $Q77g$var$resolvePromise($Q77g$var$checkNative(algo).then(function (resp) {\n    if (resp) return $Q77g$var$browserPbkdf2(password, salt, iterations, keylen, algo);\n    return $Q77g$var$sync(password, salt, iterations, keylen, digest);\n  }), callback);\n};"},"sourceMaps":null,"error":null,"hash":"2015e5cb8ca2fcc93081fe2f8401a283","cacheData":{"env":{},"imports":{"$require$safe-buffer":["safe-buffer","*"],"$require$./precondition":["./precondition","*"],"$require$./default-encoding":["./default-encoding","*"],"$require$./sync":["./sync","*"],"$require$./to-buffer":["./to-buffer","*"],"$require$process":["process","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}