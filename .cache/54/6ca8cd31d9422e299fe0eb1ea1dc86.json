{"id":"pklH","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\hash.js\\package.json","includedInParent":true,"mtime":1598465911093},{"name":"../utils","loc":{"line":3,"column":20},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\hash.js\\lib\\hash\\sha\\224.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\hash.js\\lib\\hash\\utils.js"},{"name":"./256","loc":{"line":4,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\hash.js\\lib\\hash\\sha\\224.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\hash.js\\lib\\hash\\sha\\256.js"}],"generated":{"js":"var $pklH$exports = {};\nvar $pklH$var$utils = $parcel$require(\"pklH\", \"../utils\");\nvar $pklH$var$SHA256 = $parcel$require(\"pklH\", \"./256\");\n\nfunction $pklH$var$SHA224() {\n  if (!(this instanceof $pklH$var$SHA224)) return new $pklH$var$SHA224();\n  $pklH$var$SHA256.call(this);\n  this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n}\n\n$pklH$var$utils.inherits($pklH$var$SHA224, $pklH$var$SHA256);\n$pklH$exports = $pklH$var$SHA224;\n$pklH$var$SHA224.blockSize = 512;\n$pklH$var$SHA224.outSize = 224;\n$pklH$var$SHA224.hmacStrength = 192;\n$pklH$var$SHA224.padLength = 64;\n\n$pklH$var$SHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex') return $pklH$var$utils.toHex32(this.h.slice(0, 7), 'big');else return $pklH$var$utils.split32(this.h.slice(0, 7), 'big');\n};"},"sourceMaps":null,"error":null,"hash":"fa58ad95c1f465d5a27a8d7259769c6d","cacheData":{"env":{},"imports":{"$require$../utils":["../utils","*"],"$require$./256":["./256","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}