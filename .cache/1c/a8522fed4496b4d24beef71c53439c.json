{"id":"oLVR","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\unpipe\\package.json","includedInParent":true,"mtime":1598465888658}],"generated":{"js":"var $oLVR$exports = {};\n\n/**\n * Module exports.\n * @public\n */\n$oLVR$exports = $oLVR$var$unpipe;\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction $oLVR$var$hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data');\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\n\nfunction $oLVR$var$unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required');\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe();\n    return;\n  } // Node.js 0.8 hack\n\n\n  if (!$oLVR$var$hasPipeDataListeners(stream)) {\n    return;\n  }\n\n  var listener;\n  var listeners = stream.listeners('close');\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i];\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue;\n    } // invoke the listener\n\n\n    listener.call(stream);\n  }\n}"},"sourceMaps":null,"error":null,"hash":"7186c08476f4c5fc4b86cd120062a5a8","cacheData":{"env":{},"imports":{},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}