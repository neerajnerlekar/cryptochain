{"id":"MAG5","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\encodeurl\\package.json","includedInParent":true,"mtime":1598465921746}],"generated":{"js":"var $MAG5$exports = {};\n\n/**\n * Module exports.\n * @public\n */\n$MAG5$exports = $MAG5$var$encodeUrl;\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar $MAG5$var$ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g;\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar $MAG5$var$UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g;\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar $MAG5$var$UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2';\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction $MAG5$var$encodeUrl(url) {\n  return String(url).replace($MAG5$var$UNMATCHED_SURROGATE_PAIR_REGEXP, $MAG5$var$UNMATCHED_SURROGATE_PAIR_REPLACE).replace($MAG5$var$ENCODE_CHARS_REGEXP, encodeURI);\n}"},"sourceMaps":null,"error":null,"hash":"f566e5d09851cd1237d716fd6ec54865","cacheData":{"env":{},"imports":{},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}