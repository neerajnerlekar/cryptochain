{"id":"o7gO","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safer-buffer\\package.json","includedInParent":true,"mtime":1598465897513},{"name":"buffer","loc":{"line":5,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safer-buffer\\safer.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\buffer\\index.js"},{"name":"process","parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safer-buffer\\safer.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\process\\browser.js"}],"generated":{"js":"\nvar $o7gO$exports = {};\nvar $o7gO$var$process = $parcel$require(\"o7gO\", \"process\");\nvar $o7gO$var$buffer = $parcel$require(\"o7gO\", \"buffer\");\nvar $o7gO$var$Buffer = $o7gO$var$buffer.Buffer;\nvar $o7gO$var$safer = {};\nvar $o7gO$var$key;\n\nfor ($o7gO$var$key in $o7gO$var$buffer) {\n  if (!$o7gO$var$buffer.hasOwnProperty($o7gO$var$key)) continue;\n  if ($o7gO$var$key === 'SlowBuffer' || $o7gO$var$key === 'Buffer') continue;\n  $o7gO$var$safer[$o7gO$var$key] = $o7gO$var$buffer[$o7gO$var$key];\n}\n\nvar $o7gO$var$Safer = $o7gO$var$safer.Buffer = {};\n\nfor ($o7gO$var$key in $o7gO$var$Buffer) {\n  if (!$o7gO$var$Buffer.hasOwnProperty($o7gO$var$key)) continue;\n  if ($o7gO$var$key === 'allocUnsafe' || $o7gO$var$key === 'allocUnsafeSlow') continue;\n  $o7gO$var$Safer[$o7gO$var$key] = $o7gO$var$Buffer[$o7gO$var$key];\n}\n\n$o7gO$var$safer.Buffer.prototype = $o7gO$var$Buffer.prototype;\n\nif (!$o7gO$var$Safer.from || $o7gO$var$Safer.from === Uint8Array.from) {\n  $o7gO$var$Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value);\n    }\n\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value);\n    }\n\n    return $o7gO$var$Buffer(value, encodingOrOffset, length);\n  };\n}\n\nif (!$o7gO$var$Safer.alloc) {\n  $o7gO$var$Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size);\n    }\n\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n\n    var buf = $o7gO$var$Buffer(size);\n\n    if (!fill || fill.length === 0) {\n      buf.fill(0);\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n\n    return buf;\n  };\n}\n\nif (!$o7gO$var$safer.kStringMaxLength) {\n  try {\n    $o7gO$var$safer.kStringMaxLength = $o7gO$var$process.binding('buffer').kStringMaxLength;\n  } catch (e) {// we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!$o7gO$var$safer.constants) {\n  $o7gO$var$safer.constants = {\n    MAX_LENGTH: $o7gO$var$safer.kMaxLength\n  };\n\n  if ($o7gO$var$safer.kStringMaxLength) {\n    $o7gO$var$safer.constants.MAX_STRING_LENGTH = $o7gO$var$safer.kStringMaxLength;\n  }\n}\n\n$o7gO$exports = $o7gO$var$safer;"},"sourceMaps":null,"error":null,"hash":"9ffe6471e14e19630fab556e98b2c5d4","cacheData":{"env":{},"imports":{"$require$buffer":["buffer","*"],"$require$process":["process","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}