{"id":"oThU","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-ecdh\\node_modules\\elliptic\\package.json","includedInParent":true,"mtime":1598465911285},{"name":"bn.js","loc":{"line":3,"column":17},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-ecdh\\node_modules\\elliptic\\lib\\elliptic\\eddsa\\signature.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\bn.js\\lib\\bn.js"},{"name":"../utils","loc":{"line":4,"column":20},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-ecdh\\node_modules\\elliptic\\lib\\elliptic\\eddsa\\signature.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-ecdh\\node_modules\\elliptic\\lib\\elliptic\\utils.js"}],"generated":{"js":"var $oThU$exports = {};\nvar $oThU$var$BN = $parcel$require(\"oThU\", \"bn.js\");\nvar $oThU$var$utils = $parcel$require(\"oThU\", \"../utils\");\nvar $oThU$var$assert = $oThU$var$utils.assert;\nvar $oThU$var$cachedProperty = $oThU$var$utils.cachedProperty;\nvar $oThU$var$parseBytes = $oThU$var$utils.parseBytes;\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\n\nfunction $oThU$var$Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n  if (typeof sig !== 'object') sig = $oThU$var$parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  $oThU$var$assert(sig.R && sig.S, 'Signature without R or S');\n  if (eddsa.isPoint(sig.R)) this._R = sig.R;\n  if (sig.S instanceof $oThU$var$BN) this._S = sig.S;\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\n$oThU$var$cachedProperty($oThU$var$Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n$oThU$var$cachedProperty($oThU$var$Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n$oThU$var$cachedProperty($oThU$var$Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n$oThU$var$cachedProperty($oThU$var$Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\n$oThU$var$Signature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\n$oThU$var$Signature.prototype.toHex = function toHex() {\n  return $oThU$var$utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\n$oThU$exports = $oThU$var$Signature;"},"sourceMaps":null,"error":null,"hash":"ce4ef15a0c5773ba5395523df6d63d43","cacheData":{"env":{},"imports":{"$require$bn.js":["bn.js","*"],"$require$../utils":["../utils","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}