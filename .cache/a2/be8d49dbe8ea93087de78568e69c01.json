{"id":"cIS0","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\diffie-hellman\\package.json","includedInParent":true,"mtime":1598465898007},{"name":"randombytes","loc":{"line":1,"column":26},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\diffie-hellman\\lib\\generatePrime.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\randombytes\\browser.js"},{"name":"bn.js","loc":{"line":5,"column":17},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\diffie-hellman\\lib\\generatePrime.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\bn.js\\lib\\bn.js"},{"name":"miller-rabin","loc":{"line":7,"column":26},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\diffie-hellman\\lib\\generatePrime.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\miller-rabin\\lib\\mr.js"}],"generated":{"js":"var $cIS0$exports = {};\nvar $cIS0$var$randomBytes = $parcel$require(\"cIS0\", \"randombytes\");\n$cIS0$exports = $cIS0$var$findPrime;\n$cIS0$var$findPrime.simpleSieve = $cIS0$var$simpleSieve;\n$cIS0$var$findPrime.fermatTest = $cIS0$var$fermatTest;\nvar $cIS0$var$BN = $parcel$require(\"cIS0\", \"bn.js\");\nvar $cIS0$var$TWENTYFOUR = new $cIS0$var$BN(24);\nvar $cIS0$var$MillerRabin = $parcel$require(\"cIS0\", \"miller-rabin\");\nvar $cIS0$var$millerRabin = new $cIS0$var$MillerRabin();\nvar $cIS0$var$ONE = new $cIS0$var$BN(1);\nvar $cIS0$var$TWO = new $cIS0$var$BN(2);\nvar $cIS0$var$FIVE = new $cIS0$var$BN(5);\nvar $cIS0$var$SIXTEEN = new $cIS0$var$BN(16);\nvar $cIS0$var$EIGHT = new $cIS0$var$BN(8);\nvar $cIS0$var$TEN = new $cIS0$var$BN(10);\nvar $cIS0$var$THREE = new $cIS0$var$BN(3);\nvar $cIS0$var$SEVEN = new $cIS0$var$BN(7);\nvar $cIS0$var$ELEVEN = new $cIS0$var$BN(11);\nvar $cIS0$var$FOUR = new $cIS0$var$BN(4);\nvar $cIS0$var$TWELVE = new $cIS0$var$BN(12);\nvar $cIS0$var$primes = null;\n\nfunction $cIS0$var$_getPrimes() {\n  if ($cIS0$var$primes !== null) return $cIS0$var$primes;\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n\n    for (var j = 0; j < i && res[j] <= sqrt; j++) if (k % res[j] === 0) break;\n\n    if (i !== j && res[j] <= sqrt) continue;\n    res[i++] = k;\n  }\n\n  $cIS0$var$primes = res;\n  return res;\n}\n\nfunction $cIS0$var$simpleSieve(p) {\n  var primes = $cIS0$var$_getPrimes();\n\n  for (var i = 0; i < primes.length; i++) if (p.modn(primes[i]) === 0) {\n    if (p.cmpn(primes[i]) === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction $cIS0$var$fermatTest(p) {\n  var red = $cIS0$var$BN.mont(p);\n  return $cIS0$var$TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction $cIS0$var$findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new $cIS0$var$BN([0x8c, 0x7b]);\n    } else {\n      return new $cIS0$var$BN([0x8c, 0x27]);\n    }\n  }\n\n  gen = new $cIS0$var$BN(gen);\n  var num, n2;\n\n  while (true) {\n    num = new $cIS0$var$BN($cIS0$var$randomBytes(Math.ceil(bits / 8)));\n\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n\n    if (num.isEven()) {\n      num.iadd($cIS0$var$ONE);\n    }\n\n    if (!num.testn(1)) {\n      num.iadd($cIS0$var$TWO);\n    }\n\n    if (!gen.cmp($cIS0$var$TWO)) {\n      while (num.mod($cIS0$var$TWENTYFOUR).cmp($cIS0$var$ELEVEN)) {\n        num.iadd($cIS0$var$FOUR);\n      }\n    } else if (!gen.cmp($cIS0$var$FIVE)) {\n      while (num.mod($cIS0$var$TEN).cmp($cIS0$var$THREE)) {\n        num.iadd($cIS0$var$FOUR);\n      }\n    }\n\n    n2 = num.shrn(1);\n\n    if ($cIS0$var$simpleSieve(n2) && $cIS0$var$simpleSieve(num) && $cIS0$var$fermatTest(n2) && $cIS0$var$fermatTest(num) && $cIS0$var$millerRabin.test(n2) && $cIS0$var$millerRabin.test(num)) {\n      return num;\n    }\n  }\n}"},"sourceMaps":null,"error":null,"hash":"1a6ee07fd3dc4eee7d9d7493d939e7d7","cacheData":{"env":{},"imports":{"$require$randombytes":["randombytes","*"],"$require$bn.js":["bn.js","*"],"$require$miller-rabin":["miller-rabin","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}