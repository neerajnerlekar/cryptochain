{"id":"YaJT","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-cipher\\package.json","includedInParent":true,"mtime":1598465886487},{"name":"browserify-des","loc":{"line":1,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-cipher\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-des\\index.js"},{"name":"browserify-aes/browser","loc":{"line":2,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-cipher\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\browser.js"},{"name":"browserify-aes/modes","loc":{"line":3,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-cipher\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\modes\\index.js"},{"name":"browserify-des/modes","loc":{"line":4,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-cipher\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-des\\modes.js"},{"name":"evp_bytestokey","loc":{"line":5,"column":19},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-cipher\\browser.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\evp_bytestokey\\index.js"}],"generated":{"js":"var $YaJT$export$Cipher,\n    $YaJT$export$Cipheriv,\n    $YaJT$export$Decipher,\n    $YaJT$export$Decipheriv,\n    $YaJT$export$getCiphers,\n    $YaJT$exports = {};\nvar $YaJT$var$DES = $parcel$require(\"YaJT\", \"browserify-des\");\nvar $YaJT$var$aes = $parcel$require(\"YaJT\", \"browserify-aes/browser\");\nvar $YaJT$var$aesModes = $parcel$require(\"YaJT\", \"browserify-aes/modes\");\nvar $YaJT$var$desModes = $parcel$require(\"YaJT\", \"browserify-des/modes\");\nvar $YaJT$var$ebtk = $parcel$require(\"YaJT\", \"evp_bytestokey\");\n\nfunction $YaJT$var$createCipher(suite, password) {\n  suite = suite.toLowerCase();\n  var keyLen, ivLen;\n\n  if ($YaJT$var$aesModes[suite]) {\n    keyLen = $YaJT$var$aesModes[suite].key;\n    ivLen = $YaJT$var$aesModes[suite].iv;\n  } else if ($YaJT$var$desModes[suite]) {\n    keyLen = $YaJT$var$desModes[suite].key * 8;\n    ivLen = $YaJT$var$desModes[suite].iv;\n  } else {\n    throw new TypeError('invalid suite type');\n  }\n\n  var keys = $YaJT$var$ebtk(password, false, keyLen, ivLen);\n  return $YaJT$var$createCipheriv(suite, keys.key, keys.iv);\n}\n\nfunction $YaJT$var$createDecipher(suite, password) {\n  suite = suite.toLowerCase();\n  var keyLen, ivLen;\n\n  if ($YaJT$var$aesModes[suite]) {\n    keyLen = $YaJT$var$aesModes[suite].key;\n    ivLen = $YaJT$var$aesModes[suite].iv;\n  } else if ($YaJT$var$desModes[suite]) {\n    keyLen = $YaJT$var$desModes[suite].key * 8;\n    ivLen = $YaJT$var$desModes[suite].iv;\n  } else {\n    throw new TypeError('invalid suite type');\n  }\n\n  var keys = $YaJT$var$ebtk(password, false, keyLen, ivLen);\n  return $YaJT$var$createDecipheriv(suite, keys.key, keys.iv);\n}\n\nfunction $YaJT$var$createCipheriv(suite, key, iv) {\n  suite = suite.toLowerCase();\n  if ($YaJT$var$aesModes[suite]) return $YaJT$var$aes.createCipheriv(suite, key, iv);\n  if ($YaJT$var$desModes[suite]) return new $YaJT$var$DES({\n    key: key,\n    iv: iv,\n    mode: suite\n  });\n  throw new TypeError('invalid suite type');\n}\n\nfunction $YaJT$var$createDecipheriv(suite, key, iv) {\n  suite = suite.toLowerCase();\n  if ($YaJT$var$aesModes[suite]) return $YaJT$var$aes.createDecipheriv(suite, key, iv);\n  if ($YaJT$var$desModes[suite]) return new $YaJT$var$DES({\n    key: key,\n    iv: iv,\n    mode: suite,\n    decrypt: true\n  });\n  throw new TypeError('invalid suite type');\n}\n\nfunction $YaJT$var$getCiphers() {\n  return Object.keys($YaJT$var$desModes).concat($YaJT$var$aes.getCiphers());\n}\n\nvar $YaJT$export$createCipher = ($YaJT$export$Cipher = $YaJT$var$createCipher, $YaJT$exports.Cipher = $YaJT$export$Cipher);\n$YaJT$exports.createCipher = $YaJT$export$createCipher;\nvar $YaJT$export$createCipheriv = ($YaJT$export$Cipheriv = $YaJT$var$createCipheriv, $YaJT$exports.Cipheriv = $YaJT$export$Cipheriv);\n$YaJT$exports.createCipheriv = $YaJT$export$createCipheriv;\nvar $YaJT$export$createDecipher = ($YaJT$export$Decipher = $YaJT$var$createDecipher, $YaJT$exports.Decipher = $YaJT$export$Decipher);\n$YaJT$exports.createDecipher = $YaJT$export$createDecipher;\nvar $YaJT$export$createDecipheriv = ($YaJT$export$Decipheriv = $YaJT$var$createDecipheriv, $YaJT$exports.Decipheriv = $YaJT$export$Decipheriv);\n$YaJT$exports.createDecipheriv = $YaJT$export$createDecipheriv;\nvar $YaJT$export$listCiphers = ($YaJT$export$getCiphers = $YaJT$var$getCiphers, $YaJT$exports.getCiphers = $YaJT$export$getCiphers);\n$YaJT$exports.listCiphers = $YaJT$export$listCiphers;"},"sourceMaps":null,"error":null,"hash":"3f8039b26b68fd2ceebd63aad8ae690b","cacheData":{"env":{},"imports":{"$require$browserify-des":["browserify-des","*"],"$require$browserify-aes/browser":["browserify-aes/browser","*"],"$require$browserify-aes/modes":["browserify-aes/modes","*"],"$require$browserify-des/modes":["browserify-des/modes","*"],"$require$evp_bytestokey":["evp_bytestokey","*"]},"exports":{"createCipher":"$YaJT$export$createCipher","createCipheriv":"$YaJT$export$createCipheriv","createDecipher":"$YaJT$export$createDecipher","createDecipheriv":"$YaJT$export$createDecipheriv","listCiphers":"$YaJT$export$listCiphers","Cipher":"$YaJT$export$Cipher","Cipheriv":"$YaJT$export$Cipheriv","Decipher":"$YaJT$export$Decipher","Decipheriv":"$YaJT$export$Decipheriv","getCiphers":"$YaJT$export$getCiphers"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}