{"id":"IoIW","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\package.json","includedInParent":true,"mtime":1598465886487},{"name":"safe-buffer","loc":{"line":1,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\modes\\cfb.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safe-buffer\\index.js"},{"name":"buffer-xor","loc":{"line":2,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\modes\\cfb.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\buffer-xor\\index.js"}],"generated":{"js":"\nvar $IoIW$exports = {};\nvar $IoIW$var$Buffer = $parcel$require(\"IoIW\", \"safe-buffer\").Buffer;\nvar $IoIW$var$xor = $parcel$require(\"IoIW\", \"buffer-xor\");\n\nfunction $IoIW$var$encryptStart(self, data, decrypt) {\n  var len = data.length;\n  var out = $IoIW$var$xor(data, self._cache);\n  self._cache = self._cache.slice(len);\n  self._prev = $IoIW$var$Buffer.concat([self._prev, decrypt ? data : out]);\n  return out;\n}\n\nvar $IoIW$export$encrypt = function (self, data, decrypt) {\n  var out = $IoIW$var$Buffer.allocUnsafe(0);\n  var len;\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev);\n      self._prev = $IoIW$var$Buffer.allocUnsafe(0);\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length;\n      out = $IoIW$var$Buffer.concat([out, $IoIW$var$encryptStart(self, data.slice(0, len), decrypt)]);\n      data = data.slice(len);\n    } else {\n      out = $IoIW$var$Buffer.concat([out, $IoIW$var$encryptStart(self, data, decrypt)]);\n      break;\n    }\n  }\n\n  return out;\n};\n\n$IoIW$exports.encrypt = $IoIW$export$encrypt;"},"sourceMaps":null,"error":null,"hash":"35fb94304f899b82dfcbe6d602aebc4a","cacheData":{"env":{},"imports":{"$require$safe-buffer":["safe-buffer","*"],"$require$buffer-xor":["buffer-xor","*"]},"exports":{"encrypt":"$IoIW$export$encrypt"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}