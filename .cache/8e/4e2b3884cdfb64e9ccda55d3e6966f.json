{"id":"i8cF","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\public-encrypt\\package.json","includedInParent":true,"mtime":1598465886486},{"name":"create-hash","loc":{"line":1,"column":25},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\public-encrypt\\mgf.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\create-hash\\browser.js"},{"name":"safe-buffer","loc":{"line":2,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\public-encrypt\\mgf.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safe-buffer\\index.js"}],"generated":{"js":"\nvar $i8cF$exports = {};\nvar $i8cF$var$createHash = $parcel$require(\"i8cF\", \"create-hash\");\nvar $i8cF$var$Buffer = $parcel$require(\"i8cF\", \"safe-buffer\").Buffer;\n\n$i8cF$exports = function (seed, len) {\n  var t = $i8cF$var$Buffer.alloc(0);\n  var i = 0;\n  var c;\n\n  while (t.length < len) {\n    c = $i8cF$var$i2ops(i++);\n    t = $i8cF$var$Buffer.concat([t, $i8cF$var$createHash('sha1').update(seed).update(c).digest()]);\n  }\n\n  return t.slice(0, len);\n};\n\nfunction $i8cF$var$i2ops(c) {\n  var out = $i8cF$var$Buffer.allocUnsafe(4);\n  out.writeUInt32BE(c, 0);\n  return out;\n}"},"sourceMaps":null,"error":null,"hash":"0b2078c13e489709bc6c8a32377e43e6","cacheData":{"env":{},"imports":{"$require$create-hash":["create-hash","*"],"$require$safe-buffer":["safe-buffer","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}