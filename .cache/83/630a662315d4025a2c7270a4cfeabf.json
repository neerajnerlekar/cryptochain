{"id":"eCh4","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\package.json","includedInParent":true,"mtime":1598465886487},{"name":"./aes","loc":{"line":1,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\authCipher.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\aes.js"},{"name":"safe-buffer","loc":{"line":2,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\authCipher.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safe-buffer\\index.js"},{"name":"cipher-base","loc":{"line":3,"column":24},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\authCipher.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\cipher-base\\index.js"},{"name":"inherits","loc":{"line":4,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\authCipher.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\inherits\\inherits_browser.js"},{"name":"./ghash","loc":{"line":5,"column":20},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\authCipher.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\ghash.js"},{"name":"buffer-xor","loc":{"line":6,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\authCipher.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\buffer-xor\\index.js"},{"name":"./incr32","loc":{"line":7,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\authCipher.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\incr32.js"}],"generated":{"js":"\nvar $eCh4$exports = {};\nvar $eCh4$var$aes = $parcel$require(\"eCh4\", \"./aes\");\nvar $eCh4$var$Buffer = $parcel$require(\"eCh4\", \"safe-buffer\").Buffer;\nvar $eCh4$var$Transform = $parcel$require(\"eCh4\", \"cipher-base\");\nvar $eCh4$var$inherits = $parcel$require(\"eCh4\", \"inherits\");\nvar $eCh4$var$GHASH = $parcel$require(\"eCh4\", \"./ghash\");\nvar $eCh4$var$xor = $parcel$require(\"eCh4\", \"buffer-xor\");\nvar $eCh4$var$incr32 = $parcel$require(\"eCh4\", \"./incr32\");\n\nfunction $eCh4$var$xorTest(a, b) {\n  var out = 0;\n  if (a.length !== b.length) out++;\n  var len = Math.min(a.length, b.length);\n\n  for (var i = 0; i < len; ++i) {\n    out += a[i] ^ b[i];\n  }\n\n  return out;\n}\n\nfunction $eCh4$var$calcIv(self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = $eCh4$var$Buffer.concat([iv, $eCh4$var$Buffer.from([0, 0, 0, 1])]);\n    return $eCh4$var$Buffer.concat([iv, $eCh4$var$Buffer.from([0, 0, 0, 2])]);\n  }\n\n  var ghash = new $eCh4$var$GHASH(ck);\n  var len = iv.length;\n  var toPad = len % 16;\n  ghash.update(iv);\n\n  if (toPad) {\n    toPad = 16 - toPad;\n    ghash.update($eCh4$var$Buffer.alloc(toPad, 0));\n  }\n\n  ghash.update($eCh4$var$Buffer.alloc(8, 0));\n  var ivBits = len * 8;\n  var tail = $eCh4$var$Buffer.alloc(8);\n  tail.writeUIntBE(ivBits, 0, 8);\n  ghash.update(tail);\n  self._finID = ghash.state;\n  var out = $eCh4$var$Buffer.from(self._finID);\n  $eCh4$var$incr32(out);\n  return out;\n}\n\nfunction $eCh4$var$StreamCipher(mode, key, iv, decrypt) {\n  $eCh4$var$Transform.call(this);\n  var h = $eCh4$var$Buffer.alloc(4, 0);\n  this._cipher = new $eCh4$var$aes.AES(key);\n\n  var ck = this._cipher.encryptBlock(h);\n\n  this._ghash = new $eCh4$var$GHASH(ck);\n  iv = $eCh4$var$calcIv(this, iv, ck);\n  this._prev = $eCh4$var$Buffer.from(iv);\n  this._cache = $eCh4$var$Buffer.allocUnsafe(0);\n  this._secCache = $eCh4$var$Buffer.allocUnsafe(0);\n  this._decrypt = decrypt;\n  this._alen = 0;\n  this._len = 0;\n  this._mode = mode;\n  this._authTag = null;\n  this._called = false;\n}\n\n$eCh4$var$inherits($eCh4$var$StreamCipher, $eCh4$var$Transform);\n\n$eCh4$var$StreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - this._alen % 16;\n\n    if (rump < 16) {\n      rump = $eCh4$var$Buffer.alloc(rump, 0);\n\n      this._ghash.update(rump);\n    }\n  }\n\n  this._called = true;\n\n  var out = this._mode.encrypt(this, chunk);\n\n  if (this._decrypt) {\n    this._ghash.update(chunk);\n  } else {\n    this._ghash.update(out);\n  }\n\n  this._len += chunk.length;\n  return out;\n};\n\n$eCh4$var$StreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data');\n  var tag = $eCh4$var$xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));\n  if (this._decrypt && $eCh4$var$xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data');\n  this._authTag = tag;\n\n  this._cipher.scrub();\n};\n\n$eCh4$var$StreamCipher.prototype.getAuthTag = function getAuthTag() {\n  if (this._decrypt || !$eCh4$var$Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state');\n  return this._authTag;\n};\n\n$eCh4$var$StreamCipher.prototype.setAuthTag = function setAuthTag(tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state');\n  this._authTag = tag;\n};\n\n$eCh4$var$StreamCipher.prototype.setAAD = function setAAD(buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state');\n\n  this._ghash.update(buf);\n\n  this._alen += buf.length;\n};\n\n$eCh4$exports = $eCh4$var$StreamCipher;"},"sourceMaps":null,"error":null,"hash":"299bf3a705ad404d1944990340aaa514","cacheData":{"env":{},"imports":{"$require$./aes":["./aes","*"],"$require$safe-buffer":["safe-buffer","*"],"$require$cipher-base":["cipher-base","*"],"$require$inherits":["inherits","*"],"$require$./ghash":["./ghash","*"],"$require$buffer-xor":["buffer-xor","*"],"$require$./incr32":["./incr32","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}