{"id":"X3n0","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\package.json","includedInParent":true,"mtime":1598465886487},{"name":"safe-buffer","loc":{"line":1,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\modes\\cfb1.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safe-buffer\\index.js"}],"generated":{"js":"\nvar $X3n0$exports = {};\nvar $X3n0$var$Buffer = $parcel$require(\"X3n0\", \"safe-buffer\").Buffer;\n\nfunction $X3n0$var$encryptByte(self, byteParam, decrypt) {\n  var pad;\n  var i = -1;\n  var len = 8;\n  var out = 0;\n  var bit, value;\n\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev);\n    bit = byteParam & 1 << 7 - i ? 0x80 : 0;\n    value = pad[0] ^ bit;\n    out += (value & 0x80) >> i % 8;\n    self._prev = $X3n0$var$shiftIn(self._prev, decrypt ? bit : value);\n  }\n\n  return out;\n}\n\nfunction $X3n0$var$shiftIn(buffer, value) {\n  var len = buffer.length;\n  var i = -1;\n  var out = $X3n0$var$Buffer.allocUnsafe(buffer.length);\n  buffer = $X3n0$var$Buffer.concat([buffer, $X3n0$var$Buffer.from([value])]);\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> 7;\n  }\n\n  return out;\n}\n\nvar $X3n0$export$encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length;\n  var out = $X3n0$var$Buffer.allocUnsafe(len);\n  var i = -1;\n\n  while (++i < len) {\n    out[i] = $X3n0$var$encryptByte(self, chunk[i], decrypt);\n  }\n\n  return out;\n};\n\n$X3n0$exports.encrypt = $X3n0$export$encrypt;"},"sourceMaps":null,"error":null,"hash":"2a7f81ebecb3f0d829075eb72e4ae693","cacheData":{"env":{},"imports":{"$require$safe-buffer":["safe-buffer","*"]},"exports":{"encrypt":"$X3n0$export$encrypt"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}