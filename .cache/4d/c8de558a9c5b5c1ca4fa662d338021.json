{"id":"eCoJ","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\ripemd160\\package.json","includedInParent":true,"mtime":1598465886487},{"name":"buffer","loc":{"line":2,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\ripemd160\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\buffer\\index.js"},{"name":"inherits","loc":{"line":3,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\ripemd160\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\inherits\\inherits_browser.js"},{"name":"hash-base","loc":{"line":4,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\ripemd160\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\hash-base\\index.js"}],"generated":{"js":"\nvar $eCoJ$exports = {};\nvar $eCoJ$var$Buffer = $parcel$require(\"eCoJ\", \"buffer\").Buffer;\nvar $eCoJ$var$inherits = $parcel$require(\"eCoJ\", \"inherits\");\nvar $eCoJ$var$HashBase = $parcel$require(\"eCoJ\", \"hash-base\");\nvar $eCoJ$var$ARRAY16 = new Array(16);\nvar $eCoJ$var$zl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\nvar $eCoJ$var$zr = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\nvar $eCoJ$var$sl = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\nvar $eCoJ$var$sr = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\nvar $eCoJ$var$hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e];\nvar $eCoJ$var$hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000];\n\nfunction $eCoJ$var$RIPEMD160() {\n  $eCoJ$var$HashBase.call(this, 64); // state\n\n  this._a = 0x67452301;\n  this._b = 0xefcdab89;\n  this._c = 0x98badcfe;\n  this._d = 0x10325476;\n  this._e = 0xc3d2e1f0;\n}\n\n$eCoJ$var$inherits($eCoJ$var$RIPEMD160, $eCoJ$var$HashBase);\n\n$eCoJ$var$RIPEMD160.prototype._update = function () {\n  var words = $eCoJ$var$ARRAY16;\n\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4);\n\n  var al = this._a | 0;\n  var bl = this._b | 0;\n  var cl = this._c | 0;\n  var dl = this._d | 0;\n  var el = this._e | 0;\n  var ar = this._a | 0;\n  var br = this._b | 0;\n  var cr = this._c | 0;\n  var dr = this._d | 0;\n  var er = this._e | 0; // computation\n\n  for (var i = 0; i < 80; i += 1) {\n    var tl;\n    var tr;\n\n    if (i < 16) {\n      tl = $eCoJ$var$fn1(al, bl, cl, dl, el, words[$eCoJ$var$zl[i]], $eCoJ$var$hl[0], $eCoJ$var$sl[i]);\n      tr = $eCoJ$var$fn5(ar, br, cr, dr, er, words[$eCoJ$var$zr[i]], $eCoJ$var$hr[0], $eCoJ$var$sr[i]);\n    } else if (i < 32) {\n      tl = $eCoJ$var$fn2(al, bl, cl, dl, el, words[$eCoJ$var$zl[i]], $eCoJ$var$hl[1], $eCoJ$var$sl[i]);\n      tr = $eCoJ$var$fn4(ar, br, cr, dr, er, words[$eCoJ$var$zr[i]], $eCoJ$var$hr[1], $eCoJ$var$sr[i]);\n    } else if (i < 48) {\n      tl = $eCoJ$var$fn3(al, bl, cl, dl, el, words[$eCoJ$var$zl[i]], $eCoJ$var$hl[2], $eCoJ$var$sl[i]);\n      tr = $eCoJ$var$fn3(ar, br, cr, dr, er, words[$eCoJ$var$zr[i]], $eCoJ$var$hr[2], $eCoJ$var$sr[i]);\n    } else if (i < 64) {\n      tl = $eCoJ$var$fn4(al, bl, cl, dl, el, words[$eCoJ$var$zl[i]], $eCoJ$var$hl[3], $eCoJ$var$sl[i]);\n      tr = $eCoJ$var$fn2(ar, br, cr, dr, er, words[$eCoJ$var$zr[i]], $eCoJ$var$hr[3], $eCoJ$var$sr[i]);\n    } else {\n      // if (i<80) {\n      tl = $eCoJ$var$fn5(al, bl, cl, dl, el, words[$eCoJ$var$zl[i]], $eCoJ$var$hl[4], $eCoJ$var$sl[i]);\n      tr = $eCoJ$var$fn1(ar, br, cr, dr, er, words[$eCoJ$var$zr[i]], $eCoJ$var$hr[4], $eCoJ$var$sr[i]);\n    }\n\n    al = el;\n    el = dl;\n    dl = $eCoJ$var$rotl(cl, 10);\n    cl = bl;\n    bl = tl;\n    ar = er;\n    er = dr;\n    dr = $eCoJ$var$rotl(cr, 10);\n    cr = br;\n    br = tr;\n  } // update state\n\n\n  var t = this._b + cl + dr | 0;\n  this._b = this._c + dl + er | 0;\n  this._c = this._d + el + ar | 0;\n  this._d = this._e + al + br | 0;\n  this._e = this._a + bl + cr | 0;\n  this._a = t;\n};\n\n$eCoJ$var$RIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80;\n\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64);\n\n    this._update();\n\n    this._blockOffset = 0;\n  }\n\n  this._block.fill(0, this._blockOffset, 56);\n\n  this._block.writeUInt32LE(this._length[0], 56);\n\n  this._block.writeUInt32LE(this._length[1], 60);\n\n  this._update(); // produce result\n\n\n  var buffer = $eCoJ$var$Buffer.alloc ? $eCoJ$var$Buffer.alloc(20) : new $eCoJ$var$Buffer(20);\n  buffer.writeInt32LE(this._a, 0);\n  buffer.writeInt32LE(this._b, 4);\n  buffer.writeInt32LE(this._c, 8);\n  buffer.writeInt32LE(this._d, 12);\n  buffer.writeInt32LE(this._e, 16);\n  return buffer;\n};\n\nfunction $eCoJ$var$rotl(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction $eCoJ$var$fn1(a, b, c, d, e, m, k, s) {\n  return $eCoJ$var$rotl(a + (b ^ c ^ d) + m + k | 0, s) + e | 0;\n}\n\nfunction $eCoJ$var$fn2(a, b, c, d, e, m, k, s) {\n  return $eCoJ$var$rotl(a + (b & c | ~b & d) + m + k | 0, s) + e | 0;\n}\n\nfunction $eCoJ$var$fn3(a, b, c, d, e, m, k, s) {\n  return $eCoJ$var$rotl(a + ((b | ~c) ^ d) + m + k | 0, s) + e | 0;\n}\n\nfunction $eCoJ$var$fn4(a, b, c, d, e, m, k, s) {\n  return $eCoJ$var$rotl(a + (b & d | c & ~d) + m + k | 0, s) + e | 0;\n}\n\nfunction $eCoJ$var$fn5(a, b, c, d, e, m, k, s) {\n  return $eCoJ$var$rotl(a + (b ^ (c | ~d)) + m + k | 0, s) + e | 0;\n}\n\n$eCoJ$exports = $eCoJ$var$RIPEMD160;"},"sourceMaps":null,"error":null,"hash":"66ad2e502f4f2e71f87c866e9958c5e6","cacheData":{"env":{},"imports":{"$require$buffer":["buffer","*"],"$require$inherits":["inherits","*"],"$require$hash-base":["hash-base","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}