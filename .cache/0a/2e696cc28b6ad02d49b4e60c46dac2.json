{"id":"iKKB","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\package.json","includedInParent":true,"mtime":1598465886487},{"name":"buffer-xor","loc":{"line":1,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-aes\\modes\\cbc.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\buffer-xor\\index.js"}],"generated":{"js":"var $iKKB$exports = {};\nvar $iKKB$var$xor = $parcel$require(\"iKKB\", \"buffer-xor\");\n\nvar $iKKB$export$encrypt = function (self, block) {\n  var data = $iKKB$var$xor(block, self._prev);\n  self._prev = self._cipher.encryptBlock(data);\n  return self._prev;\n};\n\n$iKKB$exports.encrypt = $iKKB$export$encrypt;\n\nvar $iKKB$export$decrypt = function (self, block) {\n  var pad = self._prev;\n  self._prev = block;\n\n  var out = self._cipher.decryptBlock(block);\n\n  return $iKKB$var$xor(out, pad);\n};\n\n$iKKB$exports.decrypt = $iKKB$export$decrypt;"},"sourceMaps":null,"error":null,"hash":"3b19a942329e3d1ca6b4d0aedc5ccb66","cacheData":{"env":{},"imports":{"$require$buffer-xor":["buffer-xor","*"]},"exports":{"encrypt":"$iKKB$export$encrypt","decrypt":"$iKKB$export$decrypt"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}