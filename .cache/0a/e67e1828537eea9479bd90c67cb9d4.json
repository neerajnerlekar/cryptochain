{"id":"jwlu","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\merge-descriptors\\package.json","includedInParent":true,"mtime":1598465914408}],"generated":{"js":"var $jwlu$exports = {};\n\n/**\n * Module exports.\n * @public\n */\n$jwlu$exports = $jwlu$var$merge;\n/**\n * Module variables.\n * @private\n */\n\nvar $jwlu$var$hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction $jwlu$var$merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required');\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required');\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true;\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && $jwlu$var$hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return;\n    } // Copy descriptor\n\n\n    var descriptor = Object.getOwnPropertyDescriptor(src, name);\n    Object.defineProperty(dest, name, descriptor);\n  });\n  return dest;\n}"},"sourceMaps":null,"error":null,"hash":"468d55544eae21a33e0a0fcee6aa77f3","cacheData":{"env":{},"imports":{},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}