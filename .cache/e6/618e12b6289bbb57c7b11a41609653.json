{"id":"B7VB","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-des\\package.json","includedInParent":true,"mtime":1598465898389},{"name":"cipher-base","loc":{"line":1,"column":25},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-des\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\cipher-base\\index.js"},{"name":"des.js","loc":{"line":2,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-des\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\des.js\\lib\\des.js"},{"name":"inherits","loc":{"line":3,"column":23},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-des\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\inherits\\inherits_browser.js"},{"name":"safe-buffer","loc":{"line":4,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\browserify-des\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\safe-buffer\\index.js"}],"generated":{"js":"\nvar $B7VB$exports = {};\nvar $B7VB$var$CipherBase = $parcel$require(\"B7VB\", \"cipher-base\");\nvar $B7VB$var$des = $parcel$require(\"B7VB\", \"des.js\");\nvar $B7VB$var$inherits = $parcel$require(\"B7VB\", \"inherits\");\nvar $B7VB$var$Buffer = $parcel$require(\"B7VB\", \"safe-buffer\").Buffer;\nvar $B7VB$var$modes = {\n  'des-ede3-cbc': $B7VB$var$des.CBC.instantiate($B7VB$var$des.EDE),\n  'des-ede3': $B7VB$var$des.EDE,\n  'des-ede-cbc': $B7VB$var$des.CBC.instantiate($B7VB$var$des.EDE),\n  'des-ede': $B7VB$var$des.EDE,\n  'des-cbc': $B7VB$var$des.CBC.instantiate($B7VB$var$des.DES),\n  'des-ecb': $B7VB$var$des.DES\n};\n$B7VB$var$modes.des = $B7VB$var$modes['des-cbc'];\n$B7VB$var$modes.des3 = $B7VB$var$modes['des-ede3-cbc'];\n$B7VB$exports = $B7VB$var$DES;\n$B7VB$var$inherits($B7VB$var$DES, $B7VB$var$CipherBase);\n\nfunction $B7VB$var$DES(opts) {\n  $B7VB$var$CipherBase.call(this);\n  var modeName = opts.mode.toLowerCase();\n  var mode = $B7VB$var$modes[modeName];\n  var type;\n\n  if (opts.decrypt) {\n    type = 'decrypt';\n  } else {\n    type = 'encrypt';\n  }\n\n  var key = opts.key;\n\n  if (!$B7VB$var$Buffer.isBuffer(key)) {\n    key = $B7VB$var$Buffer.from(key);\n  }\n\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = $B7VB$var$Buffer.concat([key, key.slice(0, 8)]);\n  }\n\n  var iv = opts.iv;\n\n  if (!$B7VB$var$Buffer.isBuffer(iv)) {\n    iv = $B7VB$var$Buffer.from(iv);\n  }\n\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  });\n}\n\n$B7VB$var$DES.prototype._update = function (data) {\n  return $B7VB$var$Buffer.from(this._des.update(data));\n};\n\n$B7VB$var$DES.prototype._final = function () {\n  return $B7VB$var$Buffer.from(this._des.final());\n};"},"sourceMaps":null,"error":null,"hash":"c71c85dcdbd3a8db048017d220d0026c","cacheData":{"env":{},"imports":{"$require$cipher-base":["cipher-base","*"],"$require$des.js":["des.js","*"],"$require$inherits":["inherits","*"],"$require$safe-buffer":["safe-buffer","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}