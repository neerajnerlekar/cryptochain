{"id":"mkoQ","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\hash-base\\node_modules\\safe-buffer\\package.json","includedInParent":true,"mtime":1598465919262},{"name":"buffer","loc":{"line":3,"column":21},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\hash-base\\node_modules\\safe-buffer\\index.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\buffer\\index.js"}],"generated":{"js":"\nvar $mkoQ$export$Buffer,\n    $mkoQ$exports = {};\n\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\n/* eslint-disable node/no-deprecated-api */\nvar $mkoQ$var$buffer = $parcel$require(\"mkoQ\", \"buffer\");\nvar $mkoQ$var$Buffer = $mkoQ$var$buffer.Buffer; // alternative to using Object.keys for old browsers\n\nfunction $mkoQ$var$copyProps(src, dst) {\n  for (var key in src) {\n    dst[key] = src[key];\n  }\n}\n\nif ($mkoQ$var$Buffer.from && $mkoQ$var$Buffer.alloc && $mkoQ$var$Buffer.allocUnsafe && $mkoQ$var$Buffer.allocUnsafeSlow) {\n  $mkoQ$exports = $mkoQ$var$buffer;\n} else {\n  // Copy properties from require('buffer')\n  $mkoQ$var$copyProps($mkoQ$var$buffer, $mkoQ$exports);\n  $mkoQ$export$Buffer = $mkoQ$var$SafeBuffer\n  $mkoQ$exports.Buffer = $mkoQ$export$Buffer;\n}\n\nfunction $mkoQ$var$SafeBuffer(arg, encodingOrOffset, length) {\n  return $mkoQ$var$Buffer(arg, encodingOrOffset, length);\n}\n\n$mkoQ$var$SafeBuffer.prototype = Object.create($mkoQ$var$Buffer.prototype); // Copy static methods from Buffer\n\n$mkoQ$var$copyProps($mkoQ$var$Buffer, $mkoQ$var$SafeBuffer);\n\n$mkoQ$var$SafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number');\n  }\n\n  return $mkoQ$var$Buffer(arg, encodingOrOffset, length);\n};\n\n$mkoQ$var$SafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  var buf = $mkoQ$var$Buffer(size);\n\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n  } else {\n    buf.fill(0);\n  }\n\n  return buf;\n};\n\n$mkoQ$var$SafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return $mkoQ$var$Buffer(size);\n};\n\n$mkoQ$var$SafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return $mkoQ$var$buffer.SlowBuffer(size);\n};"},"sourceMaps":null,"error":null,"hash":"971c8cbfb00d4becf0da33e12ec0fa9f","cacheData":{"env":{},"imports":{"$require$buffer":["buffer","*"]},"exports":{"Buffer":"$mkoQ$export$Buffer"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}