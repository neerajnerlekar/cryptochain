{"id":"JORk","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\assert\\node_modules\\util\\package.json","includedInParent":true,"mtime":1598465926442},{"name":"./support/isBuffer","loc":{"line":526,"column":27},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\assert\\node_modules\\util\\util.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\assert\\node_modules\\util\\support\\isBufferBrowser.js"},{"name":"inherits","loc":{"line":570,"column":27},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\assert\\node_modules\\util\\util.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\assert\\node_modules\\inherits\\inherits_browser.js"},{"name":"process","parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\assert\\node_modules\\util\\util.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\process\\browser.js"}],"generated":{"js":"var $JORk$exports = {};\nvar $JORk$var$process = $parcel$require(\"JORk\", \"process\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar $JORk$var$formatRegExp = /%[sdj%]/g;\n\nvar $JORk$export$format = function (f) {\n  if (!$JORk$var$isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push($JORk$var$inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace($JORk$var$formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if ($JORk$var$isNull(x) || !$JORk$var$isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + $JORk$var$inspect(x);\n    }\n  }\n\n  return str;\n};\n\n$JORk$exports.format = $JORk$export$format; // Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\n\nvar $JORk$export$deprecate = function (fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if ($JORk$var$isUndefined($parcel$global.process)) {\n    return function () {\n      return $JORk$exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if ($JORk$var$process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if ($JORk$var$process.throwDeprecation) {\n        throw new Error(msg);\n      } else if ($JORk$var$process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n$JORk$exports.deprecate = $JORk$export$deprecate;\nvar $JORk$var$debugs = {};\nvar $JORk$var$debugEnviron;\n\nvar $JORk$export$debuglog = function (set) {\n  if ($JORk$var$isUndefined($JORk$var$debugEnviron)) $JORk$var$debugEnviron = undefined || '';\n  set = set.toUpperCase();\n\n  if (!$JORk$var$debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test($JORk$var$debugEnviron)) {\n      var pid = $JORk$var$process.pid;\n\n      $JORk$var$debugs[set] = function () {\n        var msg = $JORk$exports.format.apply($JORk$exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      $JORk$var$debugs[set] = function () {};\n    }\n  }\n\n  return $JORk$var$debugs[set];\n};\n\n$JORk$exports.debuglog = $JORk$export$debuglog;\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\nfunction $JORk$var$inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: $JORk$var$stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if ($JORk$var$isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    $JORk$exports._extend(ctx, opts);\n  } // set default options\n\n\n  if ($JORk$var$isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if ($JORk$var$isUndefined(ctx.depth)) ctx.depth = 2;\n  if ($JORk$var$isUndefined(ctx.colors)) ctx.colors = false;\n  if ($JORk$var$isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = $JORk$var$stylizeWithColor;\n  return $JORk$var$formatValue(ctx, obj, ctx.depth);\n}\n\nvar $JORk$export$inspect = $JORk$var$inspect;\n$JORk$exports.inspect = $JORk$export$inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\n$JORk$var$inspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\n$JORk$var$inspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction $JORk$var$stylizeWithColor(str, styleType) {\n  var style = $JORk$var$inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + $JORk$var$inspect.colors[style][0] + 'm' + str + '\\u001b[' + $JORk$var$inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction $JORk$var$stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction $JORk$var$arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction $JORk$var$formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && $JORk$var$isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== $JORk$exports.inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!$JORk$var$isString(ret)) {\n      ret = $JORk$var$formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = $JORk$var$formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = $JORk$var$arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if ($JORk$var$isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return $JORk$var$formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if ($JORk$var$isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if ($JORk$var$isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if ($JORk$var$isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if ($JORk$var$isError(value)) {\n      return $JORk$var$formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if ($JORk$var$isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if ($JORk$var$isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if ($JORk$var$isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if ($JORk$var$isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if ($JORk$var$isError(value)) {\n    base = ' ' + $JORk$var$formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if ($JORk$var$isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = $JORk$var$formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return $JORk$var$formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return $JORk$var$reduceToSingleString(output, base, braces);\n}\n\nfunction $JORk$var$formatPrimitive(ctx, value) {\n  if ($JORk$var$isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if ($JORk$var$isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if ($JORk$var$isNumber(value)) return ctx.stylize('' + value, 'number');\n  if ($JORk$var$isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if ($JORk$var$isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction $JORk$var$formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction $JORk$var$formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if ($JORk$var$hasOwnProperty(value, String(i))) {\n      output.push($JORk$var$formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push($JORk$var$formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction $JORk$var$formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!$JORk$var$hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if ($JORk$var$isNull(recurseTimes)) {\n        str = $JORk$var$formatValue(ctx, desc.value, null);\n      } else {\n        str = $JORk$var$formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if ($JORk$var$isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction $JORk$var$reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction $JORk$var$isArray(ar) {\n  return Array.isArray(ar);\n}\n\nvar $JORk$export$isArray = $JORk$var$isArray;\n$JORk$exports.isArray = $JORk$export$isArray;\n\nfunction $JORk$var$isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nvar $JORk$export$isBoolean = $JORk$var$isBoolean;\n$JORk$exports.isBoolean = $JORk$export$isBoolean;\n\nfunction $JORk$var$isNull(arg) {\n  return arg === null;\n}\n\nvar $JORk$export$isNull = $JORk$var$isNull;\n$JORk$exports.isNull = $JORk$export$isNull;\n\nfunction $JORk$var$isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nvar $JORk$export$isNullOrUndefined = $JORk$var$isNullOrUndefined;\n$JORk$exports.isNullOrUndefined = $JORk$export$isNullOrUndefined;\n\nfunction $JORk$var$isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nvar $JORk$export$isNumber = $JORk$var$isNumber;\n$JORk$exports.isNumber = $JORk$export$isNumber;\n\nfunction $JORk$var$isString(arg) {\n  return typeof arg === 'string';\n}\n\nvar $JORk$export$isString = $JORk$var$isString;\n$JORk$exports.isString = $JORk$export$isString;\n\nfunction $JORk$var$isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nvar $JORk$export$isSymbol = $JORk$var$isSymbol;\n$JORk$exports.isSymbol = $JORk$export$isSymbol;\n\nfunction $JORk$var$isUndefined(arg) {\n  return arg === void 0;\n}\n\nvar $JORk$export$isUndefined = $JORk$var$isUndefined;\n$JORk$exports.isUndefined = $JORk$export$isUndefined;\n\nfunction $JORk$var$isRegExp(re) {\n  return $JORk$var$isObject(re) && $JORk$var$objectToString(re) === '[object RegExp]';\n}\n\nvar $JORk$export$isRegExp = $JORk$var$isRegExp;\n$JORk$exports.isRegExp = $JORk$export$isRegExp;\n\nfunction $JORk$var$isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nvar $JORk$export$isObject = $JORk$var$isObject;\n$JORk$exports.isObject = $JORk$export$isObject;\n\nfunction $JORk$var$isDate(d) {\n  return $JORk$var$isObject(d) && $JORk$var$objectToString(d) === '[object Date]';\n}\n\nvar $JORk$export$isDate = $JORk$var$isDate;\n$JORk$exports.isDate = $JORk$export$isDate;\n\nfunction $JORk$var$isError(e) {\n  return $JORk$var$isObject(e) && ($JORk$var$objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nvar $JORk$export$isError = $JORk$var$isError;\n$JORk$exports.isError = $JORk$export$isError;\n\nfunction $JORk$var$isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nvar $JORk$export$isFunction = $JORk$var$isFunction;\n$JORk$exports.isFunction = $JORk$export$isFunction;\n\nfunction $JORk$var$isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nvar $JORk$export$isPrimitive = $JORk$var$isPrimitive;\n$JORk$exports.isPrimitive = $JORk$export$isPrimitive;\nvar $JORk$export$isBuffer = $parcel$require(\"JORk\", \"./support/isBuffer\");\n$JORk$exports.isBuffer = $JORk$export$isBuffer;\n\nfunction $JORk$var$objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction $JORk$var$pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar $JORk$var$months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\nfunction $JORk$var$timestamp() {\n  var d = new Date();\n  var time = [$JORk$var$pad(d.getHours()), $JORk$var$pad(d.getMinutes()), $JORk$var$pad(d.getSeconds())].join(':');\n  return [d.getDate(), $JORk$var$months[d.getMonth()], time].join(' ');\n} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\nvar $JORk$export$log = function () {\n  console.log('%s - %s', $JORk$var$timestamp(), $JORk$exports.format.apply($JORk$exports, arguments));\n};\n\n$JORk$exports.log = $JORk$export$log;\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\n\nvar $JORk$export$inherits = $parcel$require(\"JORk\", \"inherits\");\n$JORk$exports.inherits = $JORk$export$inherits;\n\nvar $JORk$export$_extend = function (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !$JORk$var$isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n};\n\n$JORk$exports._extend = $JORk$export$_extend;\n\nfunction $JORk$var$hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}"},"sourceMaps":null,"error":null,"hash":"45de195e7b4b7e0ac66e1b5f857e191f","cacheData":{"env":{},"imports":{"$require$./support/isBuffer":["./support/isBuffer","*"],"$require$inherits":["inherits","*"],"$require$process":["process","*"]},"exports":{"format":"$JORk$export$format","deprecate":"$JORk$export$deprecate","debuglog":"$JORk$export$debuglog","inspect":"$JORk$export$inspect","isArray":"$JORk$export$isArray","isBoolean":"$JORk$export$isBoolean","isNull":"$JORk$export$isNull","isNullOrUndefined":"$JORk$export$isNullOrUndefined","isNumber":"$JORk$export$isNumber","isString":"$JORk$export$isString","isSymbol":"$JORk$export$isSymbol","isUndefined":"$JORk$export$isUndefined","isRegExp":"$JORk$export$isRegExp","isObject":"$JORk$export$isObject","isDate":"$JORk$export$isDate","isError":"$JORk$export$isError","isFunction":"$JORk$export$isFunction","isPrimitive":"$JORk$export$isPrimitive","isBuffer":"$JORk$export$isBuffer","log":"$JORk$export$log","inherits":"$JORk$export$inherits","_extend":"$JORk$export$_extend"},"wildcards":[],"sideEffects":true,"isCommonJS":true}}