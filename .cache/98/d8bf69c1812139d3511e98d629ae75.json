{"id":"Tzhf","dependencies":[{"name":"F:\\Programs\\bbc\\cryptochain\\package.json","includedInParent":true,"mtime":1598477104553},{"name":"F:\\Programs\\bbc\\cryptochain\\.babelrc","includedInParent":true,"mtime":1598465557409},{"name":"F:\\Programs\\bbc\\cryptochain\\node_modules\\parse-asn1\\package.json","includedInParent":true,"mtime":1598465886486},{"name":"asn1.js","loc":{"line":6,"column":18},"parent":"F:\\Programs\\bbc\\cryptochain\\node_modules\\parse-asn1\\certificate.js","resolved":"F:\\Programs\\bbc\\cryptochain\\node_modules\\asn1.js\\lib\\asn1.js"}],"generated":{"js":"var $Tzhf$exports = {};\nvar $Tzhf$var$asn = $parcel$require(\"Tzhf\", \"asn1.js\");\nvar $Tzhf$var$Time = $Tzhf$var$asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  });\n});\nvar $Tzhf$var$AttributeTypeValue = $Tzhf$var$asn.define('AttributeTypeValue', function () {\n  this.seq().obj(this.key('type').objid(), this.key('value').any());\n});\nvar $Tzhf$var$AlgorithmIdentifier = $Tzhf$var$asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(this.key('algorithm').objid(), this.key('parameters').optional(), this.key('curve').objid().optional());\n});\nvar $Tzhf$var$SubjectPublicKeyInfo = $Tzhf$var$asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(this.key('algorithm').use($Tzhf$var$AlgorithmIdentifier), this.key('subjectPublicKey').bitstr());\n});\nvar $Tzhf$var$RelativeDistinguishedName = $Tzhf$var$asn.define('RelativeDistinguishedName', function () {\n  this.setof($Tzhf$var$AttributeTypeValue);\n});\nvar $Tzhf$var$RDNSequence = $Tzhf$var$asn.define('RDNSequence', function () {\n  this.seqof($Tzhf$var$RelativeDistinguishedName);\n});\nvar $Tzhf$var$Name = $Tzhf$var$asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use($Tzhf$var$RDNSequence)\n  });\n});\nvar $Tzhf$var$Validity = $Tzhf$var$asn.define('Validity', function () {\n  this.seq().obj(this.key('notBefore').use($Tzhf$var$Time), this.key('notAfter').use($Tzhf$var$Time));\n});\nvar $Tzhf$var$Extension = $Tzhf$var$asn.define('Extension', function () {\n  this.seq().obj(this.key('extnID').objid(), this.key('critical').bool().def(false), this.key('extnValue').octstr());\n});\nvar $Tzhf$var$TBSCertificate = $Tzhf$var$asn.define('TBSCertificate', function () {\n  this.seq().obj(this.key('version').explicit(0).int().optional(), this.key('serialNumber').int(), this.key('signature').use($Tzhf$var$AlgorithmIdentifier), this.key('issuer').use($Tzhf$var$Name), this.key('validity').use($Tzhf$var$Validity), this.key('subject').use($Tzhf$var$Name), this.key('subjectPublicKeyInfo').use($Tzhf$var$SubjectPublicKeyInfo), this.key('issuerUniqueID').implicit(1).bitstr().optional(), this.key('subjectUniqueID').implicit(2).bitstr().optional(), this.key('extensions').explicit(3).seqof($Tzhf$var$Extension).optional());\n});\nvar $Tzhf$var$X509Certificate = $Tzhf$var$asn.define('X509Certificate', function () {\n  this.seq().obj(this.key('tbsCertificate').use($Tzhf$var$TBSCertificate), this.key('signatureAlgorithm').use($Tzhf$var$AlgorithmIdentifier), this.key('signatureValue').bitstr());\n});\n$Tzhf$exports = $Tzhf$var$X509Certificate;"},"sourceMaps":null,"error":null,"hash":"0ad3df6102c1a643632a9f7f351bce70","cacheData":{"env":{},"imports":{"$require$asn1.js":["asn1.js","*"]},"exports":{},"wildcards":[],"sideEffects":true,"isCommonJS":true}}